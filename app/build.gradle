apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

repositories {
    maven {
        url 'https://maven.fabric.io/public'
    }
    maven {
        url "https://jitpack.io"
    }
}

android {
    // Declared in dependencies.gradle in the root of the project.
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "org.odddev.fantlab"

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        versionCode versions.major * 1000 + versions.minor * 100 + versions.patch
        versionName "${versions.major}.${versions.minor}.${versions.patch}"

        archivesBaseName = "fantlab-${versionName}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        def STRING = "String"
        def APP_NAME = "app_name"
        def BASE_URL = "BASE_URL"
        def IMAGE_STORAGE_URL = "IMAGE_STORAGE_URL"
        def string = "string"

        debug {
            buildConfigField STRING, BASE_URL, urls.dev
            buildConfigField STRING, IMAGE_STORAGE_URL, urls.imageStorage

            resValue string, APP_NAME, resVals.appNameDebug + "-" + defaultConfig.versionName

            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'

            minifyEnabled false
            shrinkResources false

            return true
        }

        qa {
            buildConfigField STRING, BASE_URL, urls.dev
            buildConfigField STRING, IMAGE_STORAGE_URL, urls.imageStorage

            resValue string, APP_NAME, resVals.appNameQa + "-" + defaultConfig.versionName

            applicationIdSuffix '.qa'
            versionNameSuffix '-QA'

            minifyEnabled false
            shrinkResources false

            signingConfig signingConfigs.debug

            return true
        }

        release {
            buildConfigField STRING, BASE_URL, urls.production
            buildConfigField STRING, IMAGE_STORAGE_URL, urls.imageStorage

            resValue string, APP_NAME, resVals.appName

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'

        return true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile libraries.kotlin

    kapt libraries.dataBindingCompiler

    compile libraries.moxy
    compile libraries.moxyAppCompat
    kapt libraries.moxyCompiler
    compile libraries.cicerone

    compile libraries.dagger
    kapt libraries.daggerCompiler

    compile libraries.rxJava
    compile libraries.rxAndroid
    compile libraries.rxLint

    compile libraries.okHttpLoggingInterceptor
    compile libraries.retrofit
    compile libraries.retrofitRxJavaAdapter
    compile libraries.retrofitGsonConverter

    compile libraries.supportAnnotations
    compile libraries.supportAppCompat
    compile libraries.supportDesign
    compile libraries.supportCardView
    compile libraries.supportConstraintLayout

    compile libraries.glide

    compile libraries.timber
    compile (libraries.crashlytics) {
        transitive = true;
    }

    // Debug tools
    debugCompile libraries.stetho
    debugCompile libraries.stethoOkHttp

    // Qa
    qaCompile libraries.stetho
    qaCompile libraries.stethoOkHttp

    // Test tools
    testCompile libraries.junit
}